# Generated by Django 3.2.7 on 2021-11-01 12:11

import accounts.models
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('is_hod', models.BooleanField(default=False)),
                ('is_employee', models.BooleanField(default=False)),
                ('is_receptionist', models.BooleanField(default=False)),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('gender', models.IntegerField(choices=[(0, 'Male'), (1, 'Female'), (2, 'Non-Binary')], default=2)),
                ('images', models.ImageField(blank=True, db_column='Images', default='/pics/orark-small.jpg', upload_to='pics')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='ComplementarySalary',
            fields=[
                ('comp_id', models.BigIntegerField(db_column='Comp_id', primary_key=True, serialize=False)),
                ('bonus', models.FloatField(blank=True, db_column='BONUS', null=True)),
                ('ma', models.FloatField(blank=True, db_column='MA', null=True)),
                ('hra', models.FloatField(blank=True, db_column='HRA', null=True)),
                ('per_inc', models.IntegerField(blank=True, db_column='per_INC', null=True)),
                ('cea', models.FloatField(blank=True, db_column='CEA', null=True)),
                ('year', models.PositiveIntegerField(default=2021, validators=[django.core.validators.MinValueValidator(1984), accounts.models.max_value_current_year])),
            ],
            options={
                'db_table': 'complementary_salary',
            },
        ),
        migrations.CreateModel(
            name='Designation',
            fields=[
                ('desg_id', models.BigAutoField(db_column='Desg_id', primary_key=True, serialize=False)),
                ('desgname', models.CharField(db_column='DesgName', max_length=100)),
            ],
            options={
                'db_table': 'designation',
            },
        ),
        migrations.CreateModel(
            name='Dept',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.user')),
                ('dep_id', models.BigIntegerField(db_column='Dep_id')),
                ('deptname', models.CharField(db_column='DeptName', max_length=100)),
            ],
            options={
                'db_table': 'dept',
            },
        ),
        migrations.CreateModel(
            name='Employees',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, serialize=False, to='accounts.user')),
                ('emp_id', models.BigIntegerField(db_column='Emp_id')),
                ('dob', models.DateField(db_column='DOB')),
                ('contact', models.CharField(db_column='Contact', max_length=18)),
                ('addresses', models.CharField(db_column='Addresses', max_length=700)),
                ('hire_date', models.DateField(db_column='Hire_date')),
                ('metrocity', models.BooleanField(default=False)),
                ('no_of_children', models.IntegerField(db_column='No_of_Children')),
                ('dep', models.ForeignKey(db_column='Dep_id', on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.dept')),
                ('desg', models.ForeignKey(db_column='Desg_id', on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.designation')),
            ],
            options={
                'db_table': 'employees',
            },
        ),
        migrations.AddField(
            model_name='designation',
            name='dep',
            field=models.ForeignKey(db_column='Dep_id', on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.dept'),
        ),
        migrations.CreateModel(
            name='Deductions',
            fields=[
                ('ded_id', models.BigIntegerField(db_column='Ded_id', primary_key=True, serialize=False)),
                ('lop_days', models.IntegerField(blank=True, db_column='LOP_days', null=True)),
                ('pf', models.FloatField(db_column='PF')),
                ('esic', models.FloatField(db_column='ESIC')),
                ('tax', models.FloatField(db_column='TAX')),
                ('lwf', models.FloatField(blank=True, db_column='LWF', null=True)),
                ('nps', models.FloatField(blank=True, db_column='NPS', null=True)),
                ('lop', models.FloatField(blank=True, db_column='LOP', null=True)),
                ('emp', models.ForeignKey(db_column='Emp_id', on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.employees')),
            ],
            options={
                'db_table': 'deductions',
            },
        ),
        migrations.CreateModel(
            name='BaseSalary',
            fields=[
                ('salary_id', models.BigIntegerField(db_column='Salary_id', primary_key=True, serialize=False)),
                ('amount', models.FloatField(db_column='Amount')),
                ('da', models.FloatField(blank=True, db_column='DA', null=True)),
                ('desg', models.ForeignKey(db_column='Desg_id', on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.designation')),
                ('dep', models.ForeignKey(db_column='Dep_id', on_delete=django.db.models.deletion.DO_NOTHING, to='accounts.dept')),
            ],
            options={
                'db_table': 'base_salary',
            },
        ),
    ]
